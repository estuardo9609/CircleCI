version: 2.1
jobs:
  # I will install node modules separetly to use a workspace
  install:
    executor: node/default
    steps:
      - checkout
      # Install project packages to get node modules
      - node/install-packages:
          override-ci-command: npm install
          cache-path: node_modules
      - run:
          command: |
            echo "I have succesfully installed my node modules."
      # https://circleci.com/docs/2.0/configuration-reference/#persist_to_workspace
      # Taking all directories to workspace
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  # Running tests
  test:
    executor: node/default
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Test
          command: npm run test
  
  # Build and push to dockerhub
  build-and-push:
    executor: docker/docker
    steps:
      - setup_remote_docker
      - checkout
      - docker/check
      - docker/build:
          image: estuardo9609/nodejs-calculator
          tag: "latest,$CIRCLE_SHA1"
      - run:
          command: |
            echo "Succesfully build a docker image estuardo9609/nodejs-calculator"
      - docker/push:
          digest-path: /tmp/digest.txt
          image: estuardo9609/nodejs-calculator
          tag: "latest,$CIRCLE_SHA1"
      - run:
          command: |
            echo "Digest is: $(</tmp/digest.txt)"
  
  deploy:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            pip install ecs-deploy
      - run:
          name: Deploy
          command: |
            ecs deploy $ECS_CLUSTER_NAME $ECS_SERVICE --image ejestrada-node estuardo9609/nodejs-calculator:$CIRCLE_SHA1 --timeout 1200 --ignore-warnings --region $AWS_REGION
            
orbs:
  # https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1.0
  # https://circleci.com/developer/orbs/orb/circleci/docker
  docker: circleci/docker@1.4.0

workflows:
  version: 2
  test:
    jobs:
      - install
      - test:
          requires:
            - install
      - build-and-push:
          requires:
            - test
      #- deploy:
      #    requires:
      #      - build-and-push
  